{"version":3,"sources":["rick.png","morty.png","components/Cards.js","api.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","EpisodeCard","className","this","props","episode","name","substring","length","air_date","Component","CharacterCard","character","status","LocationCard","location","type","API","searchEpisode","query","page","searchEpisodesUrl","fetch","then","response","console","log","Error","json","searchCharacter","searchCharactersUrl","searchLocation","searchLocationsUrl","getCharacters","charactersUrls","searchUrl","map","x","split","pop","join","getEpisodes","episodesUrls","getLocations","locationUrls","EpisodeDetail","state","characters","data","setState","prevProps","prevState","header","previous","onClick","goPrevious","currentPages","class","ch","addPage","CharacterDetail","episodes","origin","Array","isArray","url","species","gender","src","image","alt","ep","LocationDetail","residents","dimension","re","App","searchValue","pagination","maxPageLocations","maxPageCharacters","maxPageEpisodes","loadingCharacters","loadingLocations","loadingEpisodes","data_locations","data_characters","data_episodes","pages","checkedFilters","Map","handleOnChange","event","target","value","searchAll","handleFilterChange","item","isChecked","checked","set","popPage","newPages","bind","window","addEventListener","debounce","updateAll","jsonData","info","results","catch","err","current","get","id","require","placeholder","onChange","key","renderSearchResults","renderDetailPages","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5cedf542.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rick.82926b7d.png\";","module.exports = __webpack_public_path__ + \"static/media/morty.f5fa4799.png\";","import React, { Component } from 'react';\n\nexport  class EpisodeCard extends Component {\n  render() {\n    return (\n      <div className=\"card text-white\">\n        <div className=\"card-body\">\n          <span className=\"badge badge-primary\">Episode</span>\n          <h6 className=\"card-subtitle mb-2\"> {this.props.episode.episode} - {this.props.episode.name.substring(0, 15)}{(this.props.episode.name.length > 15)? \"...\":\"\"}</h6>\n          <p className=\"card-text\">{this.props.episode.air_date}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport  class CharacterCard extends Component {\n  render() {\n    return (\n      <div className=\"card text-white\">\n        <div className=\"card-body\">\n          <span className=\"badge badge-light\">Character</span>\n          <h6 className=\"card-subtitle mb-2\"> {this.props.character.name}</h6>\n          <p className=\"card-text\">{this.props.character.status}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport  class LocationCard extends Component {\n  render() {\n    return (\n      <div className=\"card text-white\">\n        <div className=\"card-body\">\n          <span className=\"badge badge-warning\">Location</span>\n          <h6 className=\"card-subtitle mb-2\"> {this.props.location.name} - {this.props.location.type}</h6>\n        </div>\n      </div>\n    );\n  }\n}\n","\nconst API = 'https://rickandmortyapi.com/api/';\n\nexport const searchEpisode = (query, page) => {\n  let searchEpisodesUrl;\n  if (!query){ searchEpisodesUrl = API+`episode/?page=${page}`; }\n  else { searchEpisodesUrl = API+`episode/?name=${query}&page=${page}`; }\n\n  return(\n    fetch(searchEpisodesUrl)\n    .then(response => {\n      if (response.status !== 200) { console.log(response.status); throw new Error(\"404\"); }\n      else { return response.json(); }\n    })\n  )\n}\n\nexport const searchCharacter = (query, page) => {\n  let searchCharactersUrl;\n  if (!query){ searchCharactersUrl = API+`character/?page=${page}`; }\n  else { searchCharactersUrl = API+`character/?name=${query}&page=${page}`; }\n  return(\n    fetch(searchCharactersUrl)\n    .then(response => {\n      if (response.status !== 200) { console.log(response.status); throw new Error(\"404\"); }\n      else { return response.json(); }\n    })\n  )\n}\n\nexport const searchLocation = (query, page) => {\n  let searchLocationsUrl;\n  if (!query){ searchLocationsUrl = API+`location/?page=${page}`; }\n  else { searchLocationsUrl = API+`location/?name=${query}&page=${page}`; }\n  return(\n    fetch(searchLocationsUrl)\n    .then(response => {\n      if (response.status !== 200) { console.log(response.status); throw new Error(\"404\"); }\n      else { return response.json(); }\n    })\n  )\n}\n\nexport const getCharacters = (charactersUrls) => {\n  var searchUrl = API+`character/${charactersUrls.map((x) => x.split(\"/\").pop()).join(\",\")}`;\n  console.log(\"GET \" + searchUrl);\n  return(\n    fetch(searchUrl)\n    .then(response => response.json())\n  )\n}\n\nexport const getEpisodes = (episodesUrls) => {\n  var searchUrl = API+`episode/${episodesUrls.map((x) => x.split(\"/\").pop()).join(\",\")}`;\n  console.log(\"GET \" + searchUrl);\n  return(\n    fetch(searchUrl)\n    .then(response => response.json())\n  )\n}\n\nexport const getLocations = (locationUrls) => {\n  var searchUrl = API+`location/${locationUrls.map((x) => x.split(\"/\").pop()).join(\",\")}`;\n  console.log(\"GET \" + searchUrl);\n  return(\n    fetch(searchUrl)\n    .then(response => response.json())\n  )\n}\n","import React, { Component } from 'react';\nimport { getCharacters, getEpisodes, getLocations } from '../api';\n\nexport class EpisodeDetail extends Component {\n  state = {\n    characters: []\n  };\n\n  componentDidMount() {\n    getCharacters(this.props.data.characters)\n    .then(data => {\n      this.setState({characters: data});\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      getCharacters(this.props.data.characters)\n      .then(data => {\n        this.setState({characters: data});\n      });\n    }\n  }\n\n  render() {\n    let header;\n    if (this.props.previous){\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-1\">\n                    <button className=\"btn\"\n                            onClick={() => {\n                              this.props.goPrevious(this.props.currentPages)\n                            }}>\n                            <i class=\"fa fa-arrow-left\"></i>\n                    </button>\n                  </div>\n                  <div className=\"col-sm-9 col-sm-offset-1\"><h3>{this.props.data.name}</h3></div>\n                </div>;\n    } else {\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-12\"><h3>{this.props.data.name}</h3></div>\n                </div>;\n    }\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{header}</div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-muted\">{this.props.data.episode}</h5>\n          <p className=\"card-text\">{this.props.data.air_date}</p>\n          <p className=\"card-text\"><strong>Characters:</strong></p>\n          <ul>\n            {this.state.characters.map((ch) => {\n              return(\n                <li className=\"text-link\" onClick={() => {this.props.addPage(\"character\", ch, this.props.currentPages)}}>{ch.name}</li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport class CharacterDetail extends Component {\n  state = {\n    episodes: [],\n    origin: null,\n    location: null,\n  };\n\n  componentDidMount() {\n    getEpisodes(this.props.data.episode)\n    .then(data => {\n      if (!Array.isArray(data)) data = [data];\n      this.setState({episodes: data});\n    });\n\n    getLocations([this.props.data.origin.url])\n    .then(data => {this.setState({origin: data});})\n\n    getLocations([this.props.data.location.url])\n    .then(data => {this.setState({location: data});})\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      getEpisodes(this.props.data.episode)\n      .then(data => {\n        if (!Array.isArray(data)) data = [data];\n        this.setState({episodes: data});\n      });\n\n      getLocations([this.props.data.origin.url])\n      .then(data => {this.setState({origin: data});})\n\n      getLocations([this.props.data.location.url])\n      .then(data => {this.setState({location: data});})\n    }\n  }\n\n  render() {\n    let header;\n    if (this.props.previous){\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-1\">\n                    <button className=\"btn\"\n                            onClick={() => {\n                              this.props.goPrevious(this.props.currentPages)\n                            }}>\n                            <i class=\"fa fa-arrow-left\"></i>\n                    </button>\n                  </div>\n                  <div className=\"col-sm-9 col-sm-offset-1\"><h3>{this.props.data.name}</h3></div>\n                </div>;\n    } else {\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-12\"><h3>{this.props.data.name}</h3></div>\n                </div>;\n    }\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{header}</div>\n        <div className=\"card-body\">\n          <div className=\"row\">\n\n            <div className=\"col-sm-6\">\n              <p className=\"card-text\"><strong>Status:</strong> {this.props.data.status}</p>\n              <p className=\"card-text\"><strong>Species:</strong> {this.props.data.species}</p>\n              <p className=\"card-text\"><strong>Type:</strong> {this.props.data.type}</p>\n              <p className=\"card-text\"><strong>Gender:</strong> {this.props.data.gender}</p>\n              <p className=\"card-text\">\n                <strong>Origin: </strong>\n                {this.props.data.origin.url ?\n                  <bold className=\"text-link\"\n                     onClick={() => {this.props.addPage(\"location\", this.state.origin, this.props.currentPages)}}>\n                     {this.props.data.origin.name}\n                  </bold>\n                :\n                  <bold className=\"\">{this.props.data.origin.name}</bold>\n                }\n              </p>\n              <p className=\"card-text\">\n                <strong>Location: </strong>\n                {this.props.data.location.url ?\n                  <bold className=\"text-link\"\n                     onClick={() => {this.props.addPage(\"location\", this.state.location, this.props.currentPages)}}>\n                     {this.props.data.location.name}\n                  </bold>\n                :\n                  <bold className=\"\">{this.props.data.origin.name}</bold>\n                }\n              </p>\n            </div>\n            <div className=\"col-sm-6\">\n              <img src={this.props.data.image} alt={this.props.data.name}/>\n            </div>\n          </div>\n          <br/>\n          <p className=\"card-text\"><strong>Episodes:</strong></p>\n          <ul>\n            {this.state.episodes.map((ep) => {\n              return(\n                <li className=\"text-link\" onClick={() => {this.props.addPage(\"episode\", ep, this.props.currentPages)}}>{ep.episode} - {ep.name}</li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport class LocationDetail extends Component {\n  state = {\n    residents: []\n  };\n\n  componentDidMount() {\n    getCharacters(this.props.data.residents)\n    .then(data => {\n      if (!Array.isArray(data)) data = [data];\n      this.setState({residents: data});\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      getCharacters(this.props.data.residents)\n      .then(data => {\n        if (!Array.isArray(data)) data = [data];\n        this.setState({residents: data});\n      });\n    }\n  }\n\n  render() {\n    let header;\n    if (this.props.previous){\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-1\">\n                    <button className=\"btn\"\n                            onClick={() => {\n                              this.props.goPrevious(this.props.currentPages)\n                            }}>\n                            <i class=\"fa fa-arrow-left\"></i>\n                    </button>\n                  </div>\n                  <div className=\"col-sm-9 col-sm-offset-1\"><h3>{this.props.data.name}</h3></div>\n                </div>;\n    } else {\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-12\"><h3>{this.props.data.name}</h3></div>\n                </div>;\n    }\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{header}</div>\n        <div className=\"card-body\">\n          <p className=\"card-text\"><strong>Type:</strong> {this.props.data.type}</p>\n          <p className=\"card-text\"><strong>Dimension:</strong> {this.props.data.dimension}</p>\n          <p className=\"card-text\"><strong>Residents:</strong></p>\n          <ul>\n            {this.state.residents.map((re) => {\n              return(\n                <li className=\"text-link\" onClick={() => {this.props.addPage(\"character\", re, this.props.currentPages)}}>{re.name}</li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport {debounce} from 'lodash';\n\nimport { EpisodeCard, CharacterCard, LocationCard } from './components/Cards';\nimport { EpisodeDetail, CharacterDetail, LocationDetail} from './components/Details';\n\nimport { searchEpisode, searchCharacter, searchLocation } from './api';\n\n\nclass App extends Component{\n  state = {\n    searchValue: \"\",\n    pagination: 1,\n\n    maxPageLocations: 1,\n    maxPageCharacters: 1,\n    maxPageEpisodes: 1,\n\n    loadingCharacters: false,\n    loadingLocations: false,\n    loadingEpisodes: false,\n\n    data_locations: [],\n    data_characters: [],\n    data_episodes: [],\n\n    pages: [],\n    checkedFilters: new Map([[\"check-1-episode\", true],\n                             [\"check-2-character\", false],\n                             [\"check-3-location\", false],])\n  };\n\n  constructor(props){\n    super(props);\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  handleOnChange = event => {\n    this.setState({ pagination: 1, data: [] });\n    this.setState({ searchValue: event.target.value }, () => { this.searchAll() });\n  }\n\n  handleFilterChange = event => {\n    const item = event.target.name;\n    const isChecked = event.target.checked;\n    console.log(item);\n    console.log(isChecked);\n    this.setState({ checkedFilters: this.state.checkedFilters.set(item, isChecked) });\n  }\n\n  componentDidMount() {\n    this.searchAll();\n\n    window.addEventListener('scroll', debounce(() => {\n      console.log('scrolling stopped');\n      this.setState({ pagination: this.state.pagination + 1 });\n      console.log(this.state);\n      this.updateAll();\n    }, 1000));\n\n  }\n\n  searchAll(){\n    searchEpisode(this.state.searchValue, 1)\n    .then(jsonData => {\n      console.log(jsonData);\n      this.setState({ maxPageEpisodes: jsonData.info.pages, data_episodes: jsonData.results.map((x) => {return {\"type\": \"episode\", \"data\": x}})});\n    })\n    .catch((err) => {\n      this.setState({ data_episodes: []});\n    });\n\n    searchCharacter(this.state.searchValue, 1)\n    .then(jsonData => {\n      console.log(jsonData);\n      this.setState({ maxPageCharacters: jsonData.info.pages, data_characters: jsonData.results.map((x) => {return {\"type\": \"character\", \"data\": x}})});\n    })\n    .catch((err) => {\n      this.setState({ data_characters: []});\n    });\n\n    searchLocation(this.state.searchValue, 1)\n    .then(jsonData => {\n      console.log(jsonData);\n      this.setState({ maxPageLocations: jsonData.info.pages, data_locations: jsonData.results.map((x) => {return {\"type\": \"location\", \"data\": x}})});\n    })\n    .catch((err) => {\n      this.setState({ data_locations: []});\n    });\n  }\n\n  updateAll(){\n    if (this.state.maxPageEpisodes + 1 > this.state.pagination){\n      this.setState({ loadingEpisodes: true });\n      searchEpisode(this.state.searchValue, this.state.pagination)\n      .then(jsonData => {\n        this.setState({ data_episodes: [...this.state.data_episodes,\n                                        ...jsonData.results.map((x) => {return {\"type\": \"episode\", \"data\": x}})]});\n      })\n      .catch((err) => {\n        this.setState({ loadingEpisodes: false, data_episodes: this.state.data_episodes});\n      });\n    }\n\n    if (this.state.maxPageCharacters + 1 > this.state.pagination){\n      this.setState({ loadingCharacters: true });\n      searchCharacter(this.state.searchValue, this.state.pagination)\n      .then(jsonData => {\n        this.setState({ data_characters: [...this.state.data_characters,\n                                        ...jsonData.results.map((x) => {return {\"type\": \"character\", \"data\": x}})]});\n      })\n      .catch((err) => {\n        this.setState({ loadingCharacters: false, data_characters: this.state.data_characters});\n      });\n    }\n\n    if (this.state.maxPageLocations + 1 > this.state.pagination){\n      this.setState({ loadingLocations: true });\n      searchLocation(this.state.searchValue, this.state.pagination)\n      .then(jsonData => {\n        this.setState({ data_locations: [...this.state.data_locations,\n                                        ...jsonData.results.map((x) => {return {\"type\": \"location\", \"data\": x}})]});\n      })\n      .catch((err) => {\n        this.setState({ loadingLocations: false, data_locations: this.state.data_locations});\n      });\n    }\n  }\n\n  addPage = (type, data, currentPages) => {\n    this.setState({pages: [...currentPages, {\"type\": type, \"data\": data}]});\n  }\n\n  popPage = (currentPages) => {\n    let newPages = currentPages;\n    newPages.pop();\n    this.setState({pages: newPages});\n  }\n\n  renderDetailPages(){\n    if (this.state.pages.length > 0){\n      const current = this.state.pages[this.state.pages.length -1];\n      if (current.type === \"episode\"){\n        return(\n          <EpisodeDetail data={current.data}\n                         addPage={this.addPage}\n                         currentPages={this.state.pages}\n                         previous={this.state.pages.length > 1}\n                         goPrevious={this.popPage}/>\n        )\n      }\n      if (current.type === \"character\"){\n        return(\n          <CharacterDetail data={current.data}\n                           addPage={this.addPage}\n                           currentPages={this.state.pages}\n                           previous={this.state.pages.length > 1}\n                           goPrevious={this.popPage}/>\n        )\n      }\n      if (current.type === \"location\"){\n        return(\n          <LocationDetail data={current.data}\n                           addPage={this.addPage}\n                           currentPages={this.state.pages}\n                           previous={this.state.pages.length > 1}\n                           goPrevious={this.popPage}/>\n        )\n      }\n    }\n  }\n\n  renderSearchResults(){\n    if (this.state.data_episodes ||  this.state.data_locations || this.state.data_characters) {\n      return (\n        <div className=\"row\">\n          {(this.state.checkedFilters.get(\"check-1-episode\")) ?\n            this.state.data_episodes.map((item) => {\n              return(\n              <div className=\"col-sm-12 div-link search-result\" onClick={() => this.setState({ pages: [item] })}>\n                <EpisodeCard episode={item.data} />\n              </div>\n              )\n          }) : null}\n          {(this.state.checkedFilters.get(\"check-2-character\")) ?\n            this.state.data_characters.map((item) => {\n              return(\n              <div className=\"col-sm-12 div-link search-result\" onClick={() => this.setState({ pages: [item] })}>\n                <CharacterCard character={item.data} />\n              </div>\n              )\n          }) : null}\n          {(this.state.checkedFilters.get(\"check-3-location\")) ?\n            this.state.data_locations.map((item) => {\n              return(\n              <div className=\"col-sm-12 div-link search-result\" onClick={() => this.setState({ pages: [item] })}>\n                <LocationCard location={item.data} />\n              </div>\n              )\n          }) : null}\n        </div>\n      );\n    }\n    else {\n      return (\n        <div>\n          <p>No results</p>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"body-content\">\n        <img id=\"rick-image\" src={require('./rick.png')} alt=\"\" />\n        <img id=\"morty-image\" src={require('./morty.png')} alt=\"\" />\n        <div className=\"container header-title\">\n          <h1 className=\"text-center\">Rick and Morty Search Engine</h1>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-6\" id=\"search-data\">\n              <div id=\"search-bar\" className=\"row\">\n                <div className=\"col-sm-12\">\n                  <input className=\"form-control\"\n                       name=\"text\"\n                       type=\"text\"\n                       placeholder=\"Search\"\n                       onChange={event => this.handleOnChange(event)}\n                       value={this.state.searchValue}/>\n                </div>\n                <div className=\"col-sm-12\">\n                  <label key=\"checkbox1\">\n                    Episode\n                    <input type=\"checkbox\" name=\"check-1-episode\" checked={this.state.checkedFilters.get(\"check-1-episode\")} onChange={this.handleFilterChange} />\n                  </label>\n                  <label key=\"checkbox2\">\n                    Character\n                    <input type=\"checkbox\" name=\"check-2-character\" checked={this.state.checkedFilters.get(\"check-1-character\")} onChange={this.handleFilterChange} />\n                  </label>\n                  <label key=\"checkbox3\">\n                    Location\n                    <input type=\"checkbox\" name=\"check-3-location\" checked={this.state.checkedFilters.get(\"check-1-location\")} onChange={this.handleFilterChange} />\n                  </label>\n                </div>\n              </div>\n              <br/>\n              <br/>\n              <div id=\"search-results\">\n                  { this.renderSearchResults() }\n              </div>\n            </div>\n            <div className=\"container pages\">\n              <div className=\"row justify-content-end\">\n                <div className=\"col-sm-6\">\n                  { this.renderDetailPages() }\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"end-box\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}