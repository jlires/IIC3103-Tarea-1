{"version":3,"sources":["logo.svg","components/Cards.js","api.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","EpisodeCard","className","this","props","episode","name","air_date","Component","CharacterCard","character","statuus","location","LocationCard","type","dimension","API","searchEpisode","query","page","searchEpisodesUrl","fetch","then","response","status","Error","json","searchCharacter","searchCharactersUrl","searchLocation","searchLocationsUrl","getCharacters","charactersUrls","searchUrl","map","x","split","pop","join","console","log","getEpisodes","episodesUrls","getLocations","locationUrls","EpisodeDetail","state","characters","data","setState","prevProps","prevState","header","previous","onClick","goPrevious","currentPages","ch","addPage","CharacterDetail","episodes","origin","Array","isArray","url","src","image","alt","species","gender","ep","LocationDetail","residents","re","App","searchValue","pagination","maxPage","loading","data_locations","data_characters","data_episodes","pages","handleOnChange","event","target","value","searchAll","popPage","newPages","bind","jsonData","results","catch","err","length","current","item","window","addEventListener","debounce","updateAll","id","placeholder","onChange","renderSearchResults","renderDetailPages","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"6IAAAA,EAAOC,QAAU,IAA0B,kC,uKCE7BC,EAAd,uKAEI,OACE,yBAAKC,UAAU,gCACb,wBAAIA,UAAU,eAAeC,KAAKC,MAAMC,QAAQC,MAChD,yBAAKJ,UAAU,aACb,wBAAIA,UAAU,iCAAiCC,KAAKC,MAAMC,QAAQA,SAClE,uBAAGH,UAAU,aAAaC,KAAKC,MAAMC,QAAQE,gBAPvD,GAAkCC,aAcpBC,EAAd,uKAEI,OACE,yBAAKP,UAAU,qCACb,wBAAIA,UAAU,eAAeC,KAAKC,MAAMM,UAAUJ,MAClD,yBAAKJ,UAAU,aACb,wBAAIA,UAAU,iCAAiCC,KAAKC,MAAMM,UAAUC,SACpE,uBAAGT,UAAU,aAAb,aAAoCC,KAAKC,MAAMM,UAAUE,SAASN,YAP5E,GAAoCE,aActBK,EAAd,uKAEI,OACE,yBAAKX,UAAU,mCACb,wBAAIA,UAAU,eAAeC,KAAKC,MAAMQ,SAASN,MACjD,yBAAKJ,UAAU,aACb,wBAAIA,UAAU,iCAAiCC,KAAKC,MAAMQ,SAASE,MACnE,uBAAGZ,UAAU,aAAaC,KAAKC,MAAMQ,SAASG,iBAPxD,GAAmCP,aC7B7BQ,EAAM,mCAECC,EAAgB,SAACC,EAAOC,GACnC,IAAIC,EAIJ,OAFOA,EADFF,EACsBF,EAAI,iBAAD,OAAkBE,EAAlB,iBAAgCC,GAD7BH,EAAI,WAInCK,MAAMD,GACLE,MAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASC,OAAkB,MAAM,IAAIC,MAAM,OACxC,OAAOF,EAASG,WAKhBC,EAAkB,SAACT,EAAOC,GACrC,IAAIS,EAGJ,OADOA,EADFV,EACwBF,EAAI,mBAAD,OAAoBE,EAApB,iBAAkCC,GAD/BH,EAAI,aAGrCK,MAAMO,GACLN,MAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASC,OAAkB,MAAM,IAAIC,MAAM,OACxC,OAAOF,EAASG,WAKhBG,EAAiB,SAACX,EAAOC,GACpC,IAAIW,EAGJ,OADOA,EADFZ,EACuBF,EAAI,kBAAD,OAAmBE,EAAnB,iBAAiCC,GAD9BH,EAAI,YAGpCK,MAAMS,GACLR,MAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASC,OAAkB,MAAM,IAAIC,MAAM,OACxC,OAAOF,EAASG,WAKhBK,EAAgB,SAACC,GAC5B,IAAIC,EAAYjB,EAAI,aAAD,OAAcgB,EAAeE,KAAI,SAACC,GAAD,OAAOA,EAAEC,MAAM,KAAKC,SAAOC,KAAK,MAEpF,OADAC,QAAQC,IAAI,OAASP,GAEnBZ,MAAMY,GACLX,MAAK,SAAAC,GAAQ,OAAIA,EAASG,WAIlBe,EAAc,SAACC,GAC1B,IAAIT,EAAYjB,EAAI,WAAD,OAAY0B,EAAaR,KAAI,SAACC,GAAD,OAAOA,EAAEC,MAAM,KAAKC,SAAOC,KAAK,MAEhF,OADAC,QAAQC,IAAI,OAASP,GAEnBZ,MAAMY,GACLX,MAAK,SAAAC,GAAQ,OAAIA,EAASG,WAIlBiB,EAAe,SAACC,GAC3B,IAAIX,EAAYjB,EAAI,YAAD,OAAa4B,EAAaV,KAAI,SAACC,GAAD,OAAOA,EAAEC,MAAM,KAAKC,SAAOC,KAAK,MAEjF,OADAC,QAAQC,IAAI,OAASP,GAEnBZ,MAAMY,GACLX,MAAK,SAAAC,GAAQ,OAAIA,EAASG,WC/DlBmB,EAAb,kDAKE,WAAYzC,GAAO,IAAD,8BAChB,cAAMA,IALR0C,MAAQ,CACNC,WAAY,IAGI,EALpB,gEASuB,IAAD,OAClBhB,EAAc5B,KAAKC,MAAM4C,KAAKD,YAC7BzB,MAAK,SAAA0B,GACJ,EAAKC,SAAS,CAACF,WAAYC,SAZjC,yCAgBqBE,EAAWC,GAAY,IAAD,OACnCD,IAAc/C,KAAKC,OACrB2B,EAAc5B,KAAKC,MAAM4C,KAAKD,YAC7BzB,MAAK,SAAA0B,GACJ,EAAKC,SAAS,CAACF,WAAYC,SApBnC,+BAyBY,IACJI,EADG,OAmBP,OAhBEA,EADEjD,KAAKC,MAAMiD,SACH,yBAAKnD,UAAU,OACb,yBAAKA,UAAU,YACb,4BAAQA,UAAU,MACVoD,QAAS,WACP,EAAKlD,MAAMmD,WAAW,EAAKnD,MAAMoD,gBAF3C,SAOF,yBAAKtD,UAAU,4BAA2B,4BAAKC,KAAKC,MAAM4C,KAAK1C,QAGjE,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,aAAY,4BAAKC,KAAKC,MAAM4C,KAAK1C,QAI5D,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,eAAekD,GAC9B,yBAAKlD,UAAU,aACb,wBAAIA,UAAU,yBAAyBC,KAAKC,MAAM4C,KAAK3C,SACvD,uBAAGH,UAAU,aAAaC,KAAKC,MAAM4C,KAAKzC,UAC1C,uBAAGL,UAAU,aAAY,gDACzB,4BACGC,KAAK2C,MAAMC,WAAWb,KAAI,SAACuB,GAC1B,OACE,wBAAIvD,UAAU,YAAYoD,QAAS,WAAO,EAAKlD,MAAMsD,QAAQ,YAAaD,EAAI,EAAKrD,MAAMoD,gBAAiBC,EAAGnD,gBAtD7H,GAAmCE,aAiEtBmD,EAAb,kDAOE,WAAYvD,GAAO,IAAD,8BAChB,cAAMA,IAPR0C,MAAQ,CACNc,SAAU,GACVC,OAAQ,KACRjD,SAAU,MAGM,EAPpB,gEAWuB,IAAD,OAClB6B,EAAYtC,KAAKC,MAAM4C,KAAK3C,SAC3BiB,MAAK,SAAA0B,GACCc,MAAMC,QAAQf,KAAOA,EAAO,CAACA,IAClC,EAAKC,SAAS,CAACW,SAAUZ,OAG3BL,EAAa,CAACxC,KAAKC,MAAM4C,KAAKa,OAAOG,MACpC1C,MAAK,SAAA0B,GAAS,EAAKC,SAAS,CAACY,OAAQb,OAEtCL,EAAa,CAACxC,KAAKC,MAAM4C,KAAKpC,SAASoD,MACtC1C,MAAK,SAAA0B,GAAS,EAAKC,SAAS,CAACrC,SAAUoC,SAtB5C,yCAyBqBE,EAAWC,GAAY,IAAD,OACnCD,IAAc/C,KAAKC,QACrBqC,EAAYtC,KAAKC,MAAM4C,KAAK3C,SAC3BiB,MAAK,SAAA0B,GACCc,MAAMC,QAAQf,KAAOA,EAAO,CAACA,IAClC,EAAKC,SAAS,CAACW,SAAUZ,OAG3BL,EAAa,CAACxC,KAAKC,MAAM4C,KAAKa,OAAOG,MACpC1C,MAAK,SAAA0B,GAAS,EAAKC,SAAS,CAACY,OAAQb,OAEtCL,EAAa,CAACxC,KAAKC,MAAM4C,KAAKpC,SAASoD,MACtC1C,MAAK,SAAA0B,GAAS,EAAKC,SAAS,CAACrC,SAAUoC,UArC9C,+BAyCY,IACJI,EADG,OAmBP,OAhBEA,EADEjD,KAAKC,MAAMiD,SACH,yBAAKnD,UAAU,OACb,yBAAKA,UAAU,YACb,4BAAQA,UAAU,MACVoD,QAAS,WACP,EAAKlD,MAAMmD,WAAW,EAAKnD,MAAMoD,gBAF3C,SAOF,yBAAKtD,UAAU,4BAA2B,4BAAKC,KAAKC,MAAM4C,KAAK1C,QAGjE,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,aAAY,4BAAKC,KAAKC,MAAM4C,KAAK1C,QAI5D,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,eAAekD,GAC9B,yBAAKlD,UAAU,aACb,yBAAK+D,IAAK9D,KAAKC,MAAM4C,KAAKkB,MAAOC,IAAKhE,KAAKC,MAAM4C,KAAK1C,OACtD,uBAAGJ,UAAU,aAAY,2CAAzB,IAAmDC,KAAKC,MAAM4C,KAAKxB,QACnE,uBAAGtB,UAAU,aAAY,4CAAzB,IAAoDC,KAAKC,MAAM4C,KAAKoB,SACpE,uBAAGlE,UAAU,aAAY,yCAAzB,IAAiDC,KAAKC,MAAM4C,KAAKlC,MACjE,uBAAGZ,UAAU,aAAY,2CAAzB,IAAmDC,KAAKC,MAAM4C,KAAKqB,QACnE,uBAAGnE,UAAU,aACX,4CACA,0BAAMA,UAAU,YACboD,QAAS,WAAO,EAAKlD,MAAMsD,QAAQ,WAAY,EAAKZ,MAAMe,OAAQ,EAAKzD,MAAMoD,gBAC5ErD,KAAKC,MAAM4C,KAAKa,OAAOvD,OAG7B,uBAAGJ,UAAU,aACX,8CACA,0BAAMA,UAAU,YACboD,QAAS,WAAO,EAAKlD,MAAMsD,QAAQ,WAAY,EAAKZ,MAAMlC,SAAU,EAAKR,MAAMoD,gBAC9ErD,KAAKC,MAAM4C,KAAKpC,SAASN,OAG/B,uBAAGJ,UAAU,aAAY,8CACzB,4BACGC,KAAK2C,MAAMc,SAAS1B,KAAI,SAACoC,GACxB,OACE,wBAAIpE,UAAU,YAAYoD,QAAS,WAAO,EAAKlD,MAAMsD,QAAQ,UAAWY,EAAI,EAAKlE,MAAMoD,gBAAiBc,EAAGhE,gBAvF3H,GAAqCE,aAiGxB+D,EAAb,kDAKE,WAAYnE,GAAO,IAAD,8BAChB,cAAMA,IALR0C,MAAQ,CACN0B,UAAW,IAGK,EALpB,gEASuB,IAAD,OAClBzC,EAAc5B,KAAKC,MAAM4C,KAAKwB,WAC7BlD,MAAK,SAAA0B,GACJ,EAAKC,SAAS,CAACuB,UAAWxB,SAZhC,yCAgBqBE,EAAWC,GAAY,IAAD,OACnCD,IAAc/C,KAAKC,OACrB2B,EAAc5B,KAAKC,MAAM4C,KAAKwB,WAC7BlD,MAAK,SAAA0B,GACJ,EAAKC,SAAS,CAACuB,UAAWxB,SApBlC,+BAyBY,IACJI,EADG,OAmBP,OAhBEA,EADEjD,KAAKC,MAAMiD,SACH,yBAAKnD,UAAU,OACb,yBAAKA,UAAU,YACb,4BAAQA,UAAU,MACVoD,QAAS,WACP,EAAKlD,MAAMmD,WAAW,EAAKnD,MAAMoD,gBAF3C,SAOF,yBAAKtD,UAAU,4BAA2B,4BAAKC,KAAKC,MAAM4C,KAAK1C,QAGjE,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,aAAY,4BAAKC,KAAKC,MAAM4C,KAAK1C,QAI5D,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,eAAekD,GAC9B,yBAAKlD,UAAU,aACb,uBAAGA,UAAU,aAAY,yCAAzB,IAAiDC,KAAKC,MAAM4C,KAAKlC,MACjE,uBAAGZ,UAAU,aAAY,8CAAzB,IAAsDC,KAAKC,MAAM4C,KAAKjC,WACtE,uBAAGb,UAAU,aAAY,+CACzB,4BACGC,KAAK2C,MAAM0B,UAAUtC,KAAI,SAACuC,GACzB,OACE,wBAAIvE,UAAU,YAAYoD,QAAS,WAAO,EAAKlD,MAAMsD,QAAQ,YAAae,EAAI,EAAKrE,MAAMoD,gBAAiBiB,EAAGnE,gBAtD7H,GAAoCE,aC2DrBkE,E,kDAxMb,WAAYtE,GAAO,IAAD,8BAChB,cAAMA,IAZR0C,MAAQ,CACN6B,YAAa,GACbC,WAAY,EACZC,QAAS,EACTC,SAAS,EACTC,eAAgB,GAChBC,gBAAiB,GACjBC,cAAe,GACfC,MAAO,IAGS,EAKlBC,eAAiB,SAAAC,GACf,EAAKnC,SAAS,CAAE2B,WAAY,EAAG5B,KAAM,KACrC,EAAKC,SAAS,CAAE0B,YAAaS,EAAMC,OAAOC,QAAS,WAAQ,EAAKC,gBAPhD,EAmElB7B,QAAU,SAAC5C,EAAMkC,EAAMQ,GACrB,EAAKP,SAAS,CAACiC,MAAM,GAAD,mBAAM1B,GAAN,CAAoB,CAAC,KAAQ1C,EAAM,KAAQkC,QApE/C,EAuElBwC,QAAU,SAAChC,GACT,IAAIiC,EAAWjC,EACfiC,EAASpD,MACT,EAAKY,SAAS,CAACiC,MAAOO,KAxEtB,EAAKN,eAAiB,EAAKA,eAAeO,KAApB,gBAFN,E,wDAUN,IAAD,OACTzE,EAAcd,KAAK2C,MAAM6B,YAAaxE,KAAK2C,MAAM8B,YAChDtD,MAAK,SAAAqE,GACJ,EAAK1C,SAAS,CAAEgC,cAAeU,EAASC,QAAQ1D,KAAI,SAACC,GAAO,MAAO,CAAC,KAAQ,UAAW,KAAQA,QAC/FI,QAAQC,IAAI,EAAKM,UAElB+C,OAAM,SAACC,GACN,EAAK7C,SAAS,CAAEgC,cAAe,QAEjCtD,EAAgBxB,KAAK2C,MAAM6B,YAAaxE,KAAK2C,MAAM8B,YAClDtD,MAAK,SAAAqE,GACJ,EAAK1C,SAAS,CAAE+B,gBAAiBW,EAASC,QAAQ1D,KAAI,SAACC,GAAO,MAAO,CAAC,KAAQ,YAAa,KAAQA,QACnGI,QAAQC,IAAI,EAAKM,UAElB+C,OAAM,SAACC,GACN,EAAK7C,SAAS,CAAE+B,gBAAiB,QAEnCnD,EAAe1B,KAAK2C,MAAM6B,YAAaxE,KAAK2C,MAAM8B,YACjDtD,MAAK,SAAAqE,GACJ,EAAK1C,SAAS,CAAE8B,eAAgBY,EAASC,QAAQ1D,KAAI,SAACC,GAAO,MAAO,CAAC,KAAQ,WAAY,KAAQA,QACjGI,QAAQC,IAAI,EAAKM,UAElB+C,OAAM,SAACC,GACN,EAAK7C,SAAS,CAAE8B,eAAgB,U,kCAIxB,IAAD,OACT9D,EAAcd,KAAK2C,MAAM6B,YAAaxE,KAAK2C,MAAM8B,YAChDtD,MAAK,SAAAqE,GACJ,EAAK1C,SAAS,CAAEgC,cAAc,GAAD,mBAAM,EAAKnC,MAAMmC,eAAjB,YACMU,EAASC,QAAQ1D,KAAI,SAACC,GAAO,MAAO,CAAC,KAAQ,UAAW,KAAQA,UACnGI,QAAQC,IAAI,EAAKM,UAElB+C,OAAM,SAACC,GACN,EAAK7C,SAAS,CAAEgC,cAAe,EAAKnC,MAAMmC,mBAE5CtD,EAAgBxB,KAAK2C,MAAM6B,YAAaxE,KAAK2C,MAAM8B,YAClDtD,MAAK,SAAAqE,GACJ,EAAK1C,SAAS,CAAE+B,gBAAgB,GAAD,mBAAM,EAAKlC,MAAMkC,iBAAjB,YACIW,EAASC,QAAQ1D,KAAI,SAACC,GAAO,MAAO,CAAC,KAAQ,YAAa,KAAQA,UACrGI,QAAQC,IAAI,EAAKM,UAElB+C,OAAM,SAACC,GACN,EAAK7C,SAAS,CAAE+B,gBAAiB,EAAKlC,MAAMkC,qBAE9CnD,EAAe1B,KAAK2C,MAAM6B,YAAaxE,KAAK2C,MAAM8B,YACjDtD,MAAK,SAAAqE,GACJ,EAAK1C,SAAS,CAAE8B,eAAe,GAAD,mBAAM,EAAKjC,MAAMiC,gBAAjB,YACKY,EAASC,QAAQ1D,KAAI,SAACC,GAAO,MAAO,CAAC,KAAQ,WAAY,KAAQA,UACpGI,QAAQC,IAAI,EAAKM,UAElB+C,OAAM,SAACC,GACN,EAAK7C,SAAS,CAAE8B,eAAgB,EAAKjC,MAAMiC,sB,0CAe7C,GAAI5E,KAAK2C,MAAMoC,MAAMa,OAAS,EAAE,CAC9B,IAAMC,EAAU7F,KAAK2C,MAAMoC,MAAM/E,KAAK2C,MAAMoC,MAAMa,OAAQ,GAC1D,GAAqB,YAAjBC,EAAQlF,KACV,OACE,kBAAC,EAAD,CAAekC,KAAMgD,EAAQhD,KACdU,QAASvD,KAAKuD,QACdF,aAAcrD,KAAK2C,MAAMoC,MACzB7B,SAAUlD,KAAK2C,MAAMoC,MAAMa,OAAS,EACpCxC,WAAYpD,KAAKqF,UAGpC,GAAqB,cAAjBQ,EAAQlF,KACV,OACE,kBAAC,EAAD,CAAiBkC,KAAMgD,EAAQhD,KACdU,QAASvD,KAAKuD,QACdF,aAAcrD,KAAK2C,MAAMoC,MACzB7B,SAAUlD,KAAK2C,MAAMoC,MAAMa,OAAS,EACpCxC,WAAYpD,KAAKqF,UAGtC,GAAqB,aAAjBQ,EAAQlF,KACV,OACE,kBAAC,EAAD,CAAgBkC,KAAMgD,EAAQhD,KACbU,QAASvD,KAAKuD,QACdF,aAAcrD,KAAK2C,MAAMoC,MACzB7B,SAAUlD,KAAK2C,MAAMoC,MAAMa,OAAS,EACpCxC,WAAYpD,KAAKqF,a,4CAMpB,IAAD,OACnB,OAAIrF,KAAK2C,MAAMmC,eAAkB9E,KAAK2C,MAAMiC,gBAAkB5E,KAAK2C,MAAMkC,gBAErE,yBAAK9E,UAAU,OACZC,KAAK2C,MAAMmC,cAAc/C,KAAI,SAAC+D,GAC7B,OACA,yBAAK/F,UAAU,kCAAkCoD,QAAS,kBAAM,EAAKL,SAAS,CAAEiC,MAAO,CAACe,OACtF,kBAAC,EAAD,CAAa5F,QAAS4F,EAAKjD,WAI9B7C,KAAK2C,MAAMkC,gBAAgB9C,KAAI,SAAC+D,GAC/B,OACA,yBAAK/F,UAAU,kCAAkCoD,QAAS,kBAAM,EAAKL,SAAS,CAAEiC,MAAO,CAACe,OACtF,kBAAC,EAAD,CAAevF,UAAWuF,EAAKjD,WAIlC7C,KAAK2C,MAAMiC,eAAe7C,KAAI,SAAC+D,GAC9B,OACA,yBAAK/F,UAAU,kCAAkCoD,QAAS,kBAAM,EAAKL,SAAS,CAAEiC,MAAO,CAACe,OACtF,kBAAC,EAAD,CAAcrF,SAAUqF,EAAKjD,YASnC,6BACE,4C,0CAMa,IAAD,OAClB/B,EAAcd,KAAK2C,MAAM6B,YAAaxE,KAAK2C,MAAM8B,YAChDtD,MAAK,SAAAqE,GACJ,EAAK1C,SAAS,CAAE2B,WAAY,EACZK,cAAeU,EAASC,QAAQ1D,KAAI,SAACC,GAAO,MAAO,CAAC,KAAQ,UAAW,KAAQA,QAC/FI,QAAQC,IAAI,EAAKM,UAGnBoD,OAAOC,iBAAiB,SAAUC,oBAAS,WACzC7D,QAAQC,IAAI,qBACZ,EAAKS,SAAS,CAAC2B,WAAY,EAAK9B,MAAM8B,WAAa,IACnD,EAAKyB,cACJ,Q,+BAIK,IAAD,OACP,OACE,yBAAKnG,UAAU,mBACb,yBAAKA,UAAU,OACb,6DAEF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,WAAWoG,GAAG,eAC3B,yBAAKA,GAAG,aAAapG,UAAU,OAC7B,yBAAKA,UAAU,4BACf,2BAAOA,UAAU,eACVI,KAAK,OACLQ,KAAK,OACLyF,YAAY,SACZC,SAAU,SAAApB,GAAK,OAAI,EAAKD,eAAeC,IACvCE,MAAOnF,KAAK2C,MAAM6B,gBAG3B,6BACA,6BACA,yBAAK2B,GAAG,kBACFnG,KAAKsG,wBAGb,yBAAKvG,UAAU,yBACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,YACXC,KAAKuG,6B,GA1MLlG,aCAEmG,QACW,cAA7BT,OAAOtF,SAASgG,UAEe,UAA7BV,OAAOtF,SAASgG,UAEhBV,OAAOtF,SAASgG,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/F,MAAK,SAAAgG,GACJA,EAAaC,gBAEd1B,OAAM,SAAA2B,GACLjF,QAAQiF,MAAMA,EAAMC,c","file":"static/js/main.dde94af2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nexport  class EpisodeCard extends Component {\n  render() {\n    return (\n      <div className=\"card text-white bg-info mb-3\">\n        <h5 className=\"card-header\">{this.props.episode.name}</h5>\n        <div className=\"card-body\">\n          <h6 className=\"card-subtitle mb-2 text-muted\">{this.props.episode.episode}</h6>\n          <p className=\"card-text\">{this.props.episode.air_date}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport  class CharacterCard extends Component {\n  render() {\n    return (\n      <div className=\"card text-white bg-secondary mb-3\">\n        <h5 className=\"card-header\">{this.props.character.name}</h5>\n        <div className=\"card-body\">\n          <h6 className=\"card-subtitle mb-2 text-muted\">{this.props.character.statuus}</h6>\n          <p className=\"card-text\">Location: {this.props.character.location.name}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport  class LocationCard extends Component {\n  render() {\n    return (\n      <div className=\"card text-white bg-warning mb-3\">\n        <h5 className=\"card-header\">{this.props.location.name}</h5>\n        <div className=\"card-body\">\n          <h6 className=\"card-subtitle mb-2 text-muted\">{this.props.location.type}</h6>\n          <p className=\"card-text\">{this.props.location.dimension}</p>\n        </div>\n      </div>\n    );\n  }\n}\n","\nconst API = 'https://rickandmortyapi.com/api/';\n\nexport const searchEpisode = (query, page) => {\n  let searchEpisodesUrl;\n  if (!query){ searchEpisodesUrl = API+`episode/`; }\n  else { searchEpisodesUrl = API+`episode/?name=${query}&page=${page}`; }\n\n  return(\n    fetch(searchEpisodesUrl)\n    .then(response => {\n      if (response.status !== 200) { throw new Error(\"404\"); }\n      else { return response.json(); }\n    })\n  )\n}\n\nexport const searchCharacter = (query, page) => {\n  let searchCharactersUrl;\n  if (!query){ searchCharactersUrl = API+`character/`; }\n  else { searchCharactersUrl = API+`character/?name=${query}&page=${page}`; }\n  return(\n    fetch(searchCharactersUrl)\n    .then(response => {\n      if (response.status !== 200) { throw new Error(\"404\"); }\n      else { return response.json(); }\n    })\n  )\n}\n\nexport const searchLocation = (query, page) => {\n  let searchLocationsUrl;\n  if (!query){ searchLocationsUrl = API+`location/`; }\n  else { searchLocationsUrl = API+`location/?name=${query}&page=${page}`; }\n  return(\n    fetch(searchLocationsUrl)\n    .then(response => {\n      if (response.status !== 200) { throw new Error(\"404\"); }\n      else { return response.json(); }\n    })\n  )\n}\n\nexport const getCharacters = (charactersUrls) => {\n  var searchUrl = API+`character/${charactersUrls.map((x) => x.split(\"/\").pop()).join(\",\")}`;\n  console.log(\"GET \" + searchUrl);\n  return(\n    fetch(searchUrl)\n    .then(response => response.json())\n  )\n}\n\nexport const getEpisodes = (episodesUrls) => {\n  var searchUrl = API+`episode/${episodesUrls.map((x) => x.split(\"/\").pop()).join(\",\")}`;\n  console.log(\"GET \" + searchUrl);\n  return(\n    fetch(searchUrl)\n    .then(response => response.json())\n  )\n}\n\nexport const getLocations = (locationUrls) => {\n  var searchUrl = API+`location/${locationUrls.map((x) => x.split(\"/\").pop()).join(\",\")}`;\n  console.log(\"GET \" + searchUrl);\n  return(\n    fetch(searchUrl)\n    .then(response => response.json())\n  )\n}\n","import React, { Component } from 'react';\nimport { getCharacters, getEpisodes, getLocations } from '../api';\n\nexport class EpisodeDetail extends Component {\n  state = {\n    characters: []\n  };\n\n  constructor(props){\n    super(props);\n  }\n\n  componentDidMount() {\n    getCharacters(this.props.data.characters)\n    .then(data => {\n      this.setState({characters: data});\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      getCharacters(this.props.data.characters)\n      .then(data => {\n        this.setState({characters: data});\n      });\n    }\n  }\n\n  render() {\n    let header;\n    if (this.props.previous){\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-1\">\n                    <button className=\"btn\"\n                            onClick={() => {\n                              this.props.goPrevious(this.props.currentPages)\n                            }}>\n                            Back\n                    </button>\n                  </div>\n                  <div className=\"col-sm-9 col-sm-offset-1\"><h3>{this.props.data.name}</h3></div>\n                </div>;\n    } else {\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-12\"><h3>{this.props.data.name}</h3></div>\n                </div>;\n    }\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{header}</div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-muted\">{this.props.data.episode}</h5>\n          <p className=\"card-text\">{this.props.data.air_date}</p>\n          <p className=\"card-text\"><strong>Characters:</strong></p>\n          <ul>\n            {this.state.characters.map((ch) => {\n              return(\n                <li className=\"text-link\" onClick={() => {this.props.addPage(\"character\", ch, this.props.currentPages)}}>{ch.name}</li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport class CharacterDetail extends Component {\n  state = {\n    episodes: [],\n    origin: null,\n    location: null,\n  };\n\n  constructor(props){\n    super(props);\n  }\n\n  componentDidMount() {\n    getEpisodes(this.props.data.episode)\n    .then(data => {\n      if (!Array.isArray(data)) data = [data];\n      this.setState({episodes: data});\n    });\n\n    getLocations([this.props.data.origin.url])\n    .then(data => {this.setState({origin: data});})\n\n    getLocations([this.props.data.location.url])\n    .then(data => {this.setState({location: data});})\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      getEpisodes(this.props.data.episode)\n      .then(data => {\n        if (!Array.isArray(data)) data = [data];\n        this.setState({episodes: data});\n      });\n\n      getLocations([this.props.data.origin.url])\n      .then(data => {this.setState({origin: data});})\n\n      getLocations([this.props.data.location.url])\n      .then(data => {this.setState({location: data});})\n    }\n  }\n\n  render() {\n    let header;\n    if (this.props.previous){\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-1\">\n                    <button className=\"btn\"\n                            onClick={() => {\n                              this.props.goPrevious(this.props.currentPages)\n                            }}>\n                            Back\n                    </button>\n                  </div>\n                  <div className=\"col-sm-9 col-sm-offset-1\"><h3>{this.props.data.name}</h3></div>\n                </div>;\n    } else {\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-12\"><h3>{this.props.data.name}</h3></div>\n                </div>;\n    }\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{header}</div>\n        <div className=\"card-body\">\n          <img src={this.props.data.image} alt={this.props.data.name}/>\n          <p className=\"card-text\"><strong>Status:</strong> {this.props.data.status}</p>\n          <p className=\"card-text\"><strong>Species:</strong> {this.props.data.species}</p>\n          <p className=\"card-text\"><strong>Type:</strong> {this.props.data.type}</p>\n          <p className=\"card-text\"><strong>Gender:</strong> {this.props.data.gender}</p>\n          <p className=\"card-text\">\n            <strong>Origin: </strong>\n            <bold className=\"text-link\"\n               onClick={() => {this.props.addPage(\"location\", this.state.origin, this.props.currentPages)}}>\n               {this.props.data.origin.name}\n            </bold>\n          </p>\n          <p className=\"card-text\">\n            <strong>Location: </strong>\n            <bold className=\"text-link\"\n               onClick={() => {this.props.addPage(\"location\", this.state.location, this.props.currentPages)}}>\n               {this.props.data.location.name}\n            </bold>\n          </p>\n          <p className=\"card-text\"><strong>Episodes:</strong></p>\n          <ul>\n            {this.state.episodes.map((ep) => {\n              return(\n                <li className=\"text-link\" onClick={() => {this.props.addPage(\"episode\", ep, this.props.currentPages)}}>{ep.name}</li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport class LocationDetail extends Component {\n  state = {\n    residents: []\n  };\n\n  constructor(props){\n    super(props);\n  }\n\n  componentDidMount() {\n    getCharacters(this.props.data.residents)\n    .then(data => {\n      this.setState({residents: data});\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      getCharacters(this.props.data.residents)\n      .then(data => {\n        this.setState({residents: data});\n      });\n    }\n  }\n\n  render() {\n    let header;\n    if (this.props.previous){\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-1\">\n                    <button className=\"btn\"\n                            onClick={() => {\n                              this.props.goPrevious(this.props.currentPages)\n                            }}>\n                            Back\n                    </button>\n                  </div>\n                  <div className=\"col-sm-9 col-sm-offset-1\"><h3>{this.props.data.name}</h3></div>\n                </div>;\n    } else {\n      header =  <div className=\"row\">\n                  <div className=\"col-sm-12\"><h3>{this.props.data.name}</h3></div>\n                </div>;\n    }\n    return (\n      <div className=\"card\">\n        <div className=\"card-header\">{header}</div>\n        <div className=\"card-body\">\n          <p className=\"card-text\"><strong>Type:</strong> {this.props.data.type}</p>\n          <p className=\"card-text\"><strong>Dimension:</strong> {this.props.data.dimension}</p>\n          <p className=\"card-text\"><strong>Residents:</strong></p>\n          <ul>\n            {this.state.residents.map((re) => {\n              return(\n                <li className=\"text-link\" onClick={() => {this.props.addPage(\"character\", re, this.props.currentPages)}}>{re.name}</li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {debounce} from 'lodash';\n\nimport { EpisodeCard, CharacterCard, LocationCard } from './components/Cards';\nimport { EpisodeDetail, CharacterDetail, LocationDetail} from './components/Details';\n\nimport { searchEpisode, searchCharacter, searchLocation } from './api';\n\n\nclass App extends Component{\n  state = {\n    searchValue: \"\",\n    pagination: 1,\n    maxPage: 1,\n    loading: false,\n    data_locations: [],\n    data_characters: [],\n    data_episodes: [],\n    pages: []\n  };\n\n  constructor(props){\n    super(props);\n    this.handleOnChange = this.handleOnChange.bind(this);\n  }\n\n  handleOnChange = event => {\n    this.setState({ pagination: 1, data: [] });\n    this.setState({ searchValue: event.target.value }, () => { this.searchAll() });\n  }\n\n  searchAll(){\n    searchEpisode(this.state.searchValue, this.state.pagination)\n    .then(jsonData => {\n      this.setState({ data_episodes: jsonData.results.map((x) => {return {\"type\": \"episode\", \"data\": x}})});\n      console.log(this.state);\n    })\n    .catch((err) => {\n      this.setState({ data_episodes: []});\n    });\n    searchCharacter(this.state.searchValue, this.state.pagination)\n    .then(jsonData => {\n      this.setState({ data_characters: jsonData.results.map((x) => {return {\"type\": \"character\", \"data\": x}})});\n      console.log(this.state);\n    })\n    .catch((err) => {\n      this.setState({ data_characters: []});\n    });\n    searchLocation(this.state.searchValue, this.state.pagination)\n    .then(jsonData => {\n      this.setState({ data_locations: jsonData.results.map((x) => {return {\"type\": \"location\", \"data\": x}})});\n      console.log(this.state);\n    })\n    .catch((err) => {\n      this.setState({ data_locations: []});\n    });\n  }\n\n  updateAll(){\n    searchEpisode(this.state.searchValue, this.state.pagination)\n    .then(jsonData => {\n      this.setState({ data_episodes: [...this.state.data_episodes,\n                                      ...jsonData.results.map((x) => {return {\"type\": \"episode\", \"data\": x}})]});\n      console.log(this.state);\n    })\n    .catch((err) => {\n      this.setState({ data_episodes: this.state.data_episodes});\n    });\n    searchCharacter(this.state.searchValue, this.state.pagination)\n    .then(jsonData => {\n      this.setState({ data_characters: [...this.state.data_characters,\n                                      ...jsonData.results.map((x) => {return {\"type\": \"character\", \"data\": x}})]});\n      console.log(this.state);\n    })\n    .catch((err) => {\n      this.setState({ data_characters: this.state.data_characters});\n    });\n    searchLocation(this.state.searchValue, this.state.pagination)\n    .then(jsonData => {\n      this.setState({ data_locations: [...this.state.data_locations,\n                                      ...jsonData.results.map((x) => {return {\"type\": \"location\", \"data\": x}})]});\n      console.log(this.state);\n    })\n    .catch((err) => {\n      this.setState({ data_locations: this.state.data_locations});\n    });\n  }\n\n  addPage = (type, data, currentPages) => {\n    this.setState({pages: [...currentPages, {\"type\": type, \"data\": data}]});\n  }\n\n  popPage = (currentPages) => {\n    let newPages = currentPages;\n    newPages.pop();\n    this.setState({pages: newPages});\n  }\n\n  renderDetailPages(){\n    if (this.state.pages.length > 0){\n      const current = this.state.pages[this.state.pages.length -1];\n      if (current.type === \"episode\"){\n        return(\n          <EpisodeDetail data={current.data}\n                         addPage={this.addPage}\n                         currentPages={this.state.pages}\n                         previous={this.state.pages.length > 1}\n                         goPrevious={this.popPage}/>\n        )\n      }\n      if (current.type === \"character\"){\n        return(\n          <CharacterDetail data={current.data}\n                           addPage={this.addPage}\n                           currentPages={this.state.pages}\n                           previous={this.state.pages.length > 1}\n                           goPrevious={this.popPage}/>\n        )\n      }\n      if (current.type === \"location\"){\n        return(\n          <LocationDetail data={current.data}\n                           addPage={this.addPage}\n                           currentPages={this.state.pages}\n                           previous={this.state.pages.length > 1}\n                           goPrevious={this.popPage}/>\n        )\n      }\n    }\n  }\n\n  renderSearchResults(){\n    if (this.state.data_episodes ||  this.state.data_locations || this.state.data_characters) {\n      return (\n        <div className=\"row\">\n          {this.state.data_episodes.map((item) => {\n            return(\n            <div className=\"col-sm-4 div-link search-result\" onClick={() => this.setState({ pages: [item] })}>\n              <EpisodeCard episode={item.data} />\n            </div>\n            )\n          })}\n          {this.state.data_characters.map((item) => {\n            return(\n            <div className=\"col-sm-4 div-link search-result\" onClick={() => this.setState({ pages: [item] })}>\n              <CharacterCard character={item.data} />\n            </div>\n            )\n          })}\n          {this.state.data_locations.map((item) => {\n            return(\n            <div className=\"col-sm-4 div-link search-result\" onClick={() => this.setState({ pages: [item] })}>\n              <LocationCard location={item.data} />\n            </div>\n            )\n          })}\n        </div>\n      );\n    }\n    else {\n      return (\n        <div>\n          <p>No results</p>\n        </div>\n      );\n    }\n  }\n\n  componentDidMount() {\n    searchEpisode(this.state.searchValue, this.state.pagination)\n    .then(jsonData => {\n      this.setState({ pagination: 1,\n                      data_episodes: jsonData.results.map((x) => {return {\"type\": \"episode\", \"data\": x}})});\n      console.log(this.state);\n    });\n\n    window.addEventListener('scroll', debounce(() => {\n      console.log('scrolling stopped');\n      this.setState({pagination: this.state.pagination + 1});\n      this.updateAll()\n    }, 1000));\n\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <h1>Rick and Morty Search Engine</h1>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-6\" id=\"search-data\">\n            <div id=\"search-bar\" className=\"row\">\n              <div className=\"col-sm-8 col-sm-offset-2\">\n              <input className=\"form-control\"\n                     name=\"text\"\n                     type=\"text\"\n                     placeholder=\"Search\"\n                     onChange={event => this.handleOnChange(event)}\n                     value={this.state.searchValue}/>\n              </div>\n            </div>\n            <br/>\n            <br/>\n            <div id=\"search-results\">\n                { this.renderSearchResults() }\n            </div>\n          </div>\n          <div className=\"container-fluid pages\">\n            <div className=\"row justify-content-end\">\n              <div className=\"col-sm-6\">\n                { this.renderDetailPages() }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}